<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ripplesolutions</groupId>
    <artifactId>nfc-card-reader</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>nfc-card-reader</name>
    <properties>
        <!--build-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.manifest>3.0.2</maven.compiler.manifest>
        <!--core-->
        <jnasmartcardio.version>0.2.7</jnasmartcardio.version>
        <javafx.maven.plugin.version>0.0.6</javafx.maven.plugin.version>
        <java.sdk.path.bin>C:\Program Files\BellSoft\LibericaNIK-Full-21-OpenJDK-17</java.sdk.path.bin>
        <java.build.mainClass>com.ripplesolutions.nfc.cardreader.Main</java.build.mainClass>
        <!--appearance-->
        <jfoenix.version>9.0.10</jfoenix.version>
        <firebase.version>8.1.0</firebase.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.8.2</junit.version>
        <slf4j.version>1.7.32</slf4j.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>libraries-bom</artifactId>
                <version>22.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.google.auth</groupId>
                <artifactId>google-auth-library-bom</artifactId>
                <version>1.3.0</version>
                <type>pom</type>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-core-bom</artifactId>
                <version>2.1.0</version>
                <type>pom</type>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-firestore-bom</artifactId>
                <version>3.0.2</version>
                <type>pom</type>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!--fix slf4j not found error-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.32</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-firestore</artifactId>
            <version>3.0.2</version>
            <scope>compile</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-core</artifactId>
            <version>2.1.0</version>
            <scope>compile</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.firebase</groupId>
            <artifactId>firebase-admin</artifactId>
            <version>8.1.0</version>
            <scope>compile</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.auth</groupId>
            <artifactId>google-auth-library-oauth2-http</artifactId>
            <version>1.3.0</version>
            <scope>compile</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.auth</groupId>
            <artifactId>google-auth-library-credentials</artifactId>
            <version>1.3.0</version>
            <scope>compile</scope>
            <type>jar</type>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.jfoenix/jfoenix -->
        <dependency>
            <groupId>com.jfoenix</groupId>
            <artifactId>jfoenix</artifactId>
            <version>${jfoenix.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.jnasmartcardio</groupId>
            <artifactId>jnasmartcardio</artifactId>
            <version>${jnasmartcardio.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                        <manifest>
                            <mainClass>${java.build.mainClass}</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>/</classpathPrefix>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running with: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>${java.build.mainClass}</mainClass>
                            <launcher>app</launcher>
                            <jlinkZipName>app</jlinkZipName>
                            <jlinkImageName>app</jlinkImageName>
                            <noManPages>true</noManPages>
                            <stripDebug>true</stripDebug>
                            <noHeaderFiles>true</noHeaderFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--if you do not include this file, you will get an error
                saying tool chain is missing, I figured this was because of using a custom JDK -liberica -->
                <!--make sure you create a file under .m2 maven directory if one doesn't exist already
                with the configurations for this plugin-->
                <!--I have included a toolchains-file-to-use.xml file, you can refer to it for what to do-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-toolchains-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>toolchain</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <toolchains>
                        <jdk>
                            <version>17</version>
                            <vendor>liberica</vendor>
                        </jdk>
                    </toolchains>
                </configuration>
            </plugin>
            <!--j packager plugin-->
            <plugin>
                <groupId>io.github.fvarrui</groupId>
                <artifactId>javapackager</artifactId>
                <version>1.6.2</version>
                <configuration>
                    <mainClass>${java.build.mainClass}</mainClass>
                    <organizationEmail>info@eripplesolutions.com</organizationEmail>
                    <version>1.0</version>
                    <description>nfc card reader controller</description>
                    <displayName>NFC CARD READER CONTROLLER</displayName>
                    <generateInstaller>true</generateInstaller>
                    <iconFile>${project.build.outputDirectory}/icons/256x256.ico</iconFile>
                    <organizationName>Ripple Solutions</organizationName>
                    <organizationUrl>https://www.eripplesolutions.com</organizationUrl>
                    <licenseFile>${project.basedir}/license.rtf</licenseFile>
                    <platform>windows</platform>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-with-jre</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <configuration>
                            <name>nfc-card-reader</name>
                            <bundleJre>true</bundleJre>
                            <customizedJre>false</customizedJre>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>